'use strict';

module.exports = function (grunt) {

    // Time how long tasks take to execute
    require('time-grunt')(grunt);

    // load all grunt tasks automatically
    require('load-grunt-tasks')(grunt);

    // Initialize config.
    grunt.initConfig({

        // contains some project configuration properties
        pkg: require('./package.json'),


        // Empties folders to start fresh
        clean: {
            all: {
                files: [{
                    dot: true,
                    src: [
                        'javascript/<%= pkg.project %>_custom.js',
                        'css/<%= pkg.project %>_custom.css'
                    ]
                }]
            }
        },

        // Make sure code styles are up to par and there are no obvious mistakes
        jshint: {
            options: {
                jshintrc: '.jshintrc'
            },
            all: [
                'javascript/*.js'
            ]
        },

        uglify: {
            dev : {
                options : {
                    beautify: true,
                    compress: false,
                    mangle: false,
                    sourceMap : false,
                    sourceMapName : 'css/sourceMap.map'
                },
                src : [
                    'javascript/*.js'
                ],
                dest : 'javascript/<%=pkg.project%>_custom.js'
            }
        },

        //Compile LESS to CSS
        less: {
            dev: {
                options: {
                    sourceMap: true,
                    dumpLineNumbers: 'comments'
                },
                files: {
                    'css/<%= pkg.project %>_custom.css': 'css/LESS/_brand_custom.less'
                }
            }
        },
        
        // Add vendor prefixed styles
        postcss: {
            options: {
                map: false, // inline sourcemaps
                processors: [
                    require('autoprefixer-core')({browsers: 'last 4 versions'}) // add vendor prefixes
                ]
            },
            dist: {
                
                src: 'css/<%= pkg.project %>_custom.css'
            }
        },

        

        // The configuration for cssmin is automatically generated by usemin
        cssmin: {
            target: {
                files: [{
                    expand: true,
                    cwd: 'css/',
                    src: 'css/<%= pkg.project %>_custom.css',
                    dest: 'css/'
                }]
            }
        },

        // configuration is automatically generatred by usemin
        concat: {
            dist: {}
        },

        // Run tasks in parallel to speed up the build process
        concurrent: {
            
            task: [
                'less',
                'jshint'
            ]
        },

    
        // Add notifications for errors, server and reload
        notify: {
            production: {
                options: {
                    message: 'Newell Front end files build complete for production'
                }
            },
            dev: {
                options: {
                    message: 'Newell Front end files build complete for dev'
                }
            }
        },

        connect: {
            server: {
                options: {
                    hostname: 'localhost',
                    port: 3000,
                    base: '',
                    livereload:true
                }
            }
        },

        watch: {
            html: {
                files: ['*.html'],
                options: {
                    livereload: true,
                }
            },
            css: {
                files: ['css/LESS/*.less'],
                tasks: ['less:dev'],
                options: {
                    livereload: true,
                }
            },
            scripts: {
                files: ['js/*.js'],
                tasks: ['jshint'],
                options: {
                    event: ['all'],
                    // livereload: true,
                }
            }
        }
    });

    grunt.registerTask('build', function (target) {
       if( target === 'dev') {
            grunt.task.run([
                'clean:all',
                'concurrent:task',
                'postcss',
                'concat',
                'uglify:dev',
                'cssmin',
                'notify:dev',
                'connect',
                'watch'
            ]);
        }
    });

};
